{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "attachments": {
    "download%20%281%29.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Investigating Happiness\n",
    "\n",
    "![download%20%281%29.jpg](attachment:download%20%281%29.jpg)\n",
    "\n",
    "\n",
    "\n",
    "                                     **\" A Smile is a curve that sets everything straight!!\"**\n",
    "\n",
    "# Problem statement:\n",
    "\n",
    "Building a model to determine the most important factors in day-to-day life that makes a person happy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Attributes:\n",
    "\n",
    "1. Country : Name of the country\n",
    "\n",
    "\n",
    "2. Region : Region the country belongs to\n",
    "\n",
    "\n",
    "3. Happiness Rank : Rank of the country based on the Happiness Score\n",
    "\n",
    "\n",
    "4. Happiness Score : A metric measured in 2015 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n",
    "\n",
    "\n",
    "5. Standard Error : The standard error of the happiness score.\n",
    "\n",
    "\n",
    "6. Economy (GDP per Capita) : The extent to which GDP contributes to the calculation of the Happiness Score.\n",
    "\n",
    "\n",
    "7. Family : The extent to which Family contributes to the calculation of the Happiness Score\n",
    "\n",
    "\n",
    "8. Health (Life Expectancy) : The extent to which Life expectancy contributed to the calculation of the Happiness Score\n",
    "\n",
    "\n",
    "9. Freedom : The extent to which Freedom contributed to the calculation of the Happiness Score.\n",
    "\n",
    "\n",
    "10. Trust (Government Corruption) : The extent to which Perception of Corruption contributes to Happiness Score.\n",
    "\n",
    "\n",
    "11. Generosity : The extent to which Generosity contributed to the calculation of the Happiness Score.\n",
    "\n",
    "\n",
    "12. Dystopia Residual : The extent to which Dystopia Residual contributed to the calculation of the Happiness Score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r'C:\\Users\\krish\\Downloads\\world-happiness\\2015.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = pd.read_csv(r'C:\\Users\\krish\\Downloads\\world-happiness\\2016.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.read_csv(r'C:\\Users\\krish\\Downloads\\world-happiness\\2017.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>0.03553</td>\n",
       "      <td>1.32629</td>\n",
       "      <td>1.32261</td>\n",
       "      <td>0.90563</td>\n",
       "      <td>0.63297</td>\n",
       "      <td>0.32957</td>\n",
       "      <td>0.45811</td>\n",
       "      <td>2.45176</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country          Region  Happiness Rank  Happiness Score  \\\n",
       "0  Switzerland  Western Europe               1            7.587   \n",
       "1      Iceland  Western Europe               2            7.561   \n",
       "2      Denmark  Western Europe               3            7.527   \n",
       "3       Norway  Western Europe               4            7.522   \n",
       "4       Canada   North America               5            7.427   \n",
       "\n",
       "   Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "0         0.03411                   1.39651  1.34951   \n",
       "1         0.04884                   1.30232  1.40223   \n",
       "2         0.03328                   1.32548  1.36058   \n",
       "3         0.03880                   1.45900  1.33095   \n",
       "4         0.03553                   1.32629  1.32261   \n",
       "\n",
       "   Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "0                   0.94143  0.66557                        0.41978   \n",
       "1                   0.94784  0.62877                        0.14145   \n",
       "2                   0.87464  0.64938                        0.48357   \n",
       "3                   0.88521  0.66973                        0.36503   \n",
       "4                   0.90563  0.63297                        0.32957   \n",
       "\n",
       "   Generosity  Dystopia Residual  \n",
       "0     0.29678            2.51738  \n",
       "1     0.43630            2.70201  \n",
       "2     0.34139            2.49204  \n",
       "3     0.34699            2.46531  \n",
       "4     0.45811            2.45176  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is how the 2015 data looks like."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What do the columns succeeding the Happiness Score(like Family, Generosity, etc.) describe?\n",
    "\n",
    "**The columns:**\n",
    "GDP per Capita, Family, Life Expectancy, Freedom, Generosity, Trust Government Corruption - describe the extent to which these factors contribute in evaluating the happiness in each country.\n",
    "\n",
    "\n",
    "**What is Dystopia?**\n",
    "\n",
    "- Dystopia is an imaginary country that has the **world’s least-happy people.** The purpose in establishing Dystopia is to have a benchmark against which all countries can be favorably compared (no country performs more poorly than Dystopia) in terms of each of the six key variables, thus allowing each sub-bar to be of positive width. The lowest scores observed for the six key variables, therefore, characterize Dystopia. \n",
    "\n",
    "- Since life would be very unpleasant in a country with the world’s lowest incomes, lowest life expectancy, lowest generosity, most corruption, least freedom and least social support, it is referred to as “Dystopia,” in contrast to Utopia."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "Happy = df[['Country', 'Happiness Rank','Happiness Score']].sort_values(by = 'Happiness Rank', ascending = True).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Finland</td>\n",
       "      <td>6</td>\n",
       "      <td>7.406</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>7</td>\n",
       "      <td>7.378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>8</td>\n",
       "      <td>7.364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>9</td>\n",
       "      <td>7.286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Australia</td>\n",
       "      <td>10</td>\n",
       "      <td>7.284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  Happiness Rank  Happiness Score\n",
       "0  Switzerland               1            7.587\n",
       "1      Iceland               2            7.561\n",
       "2      Denmark               3            7.527\n",
       "3       Norway               4            7.522\n",
       "4       Canada               5            7.427\n",
       "5      Finland               6            7.406\n",
       "6  Netherlands               7            7.378\n",
       "7       Sweden               8            7.364\n",
       "8  New Zealand               9            7.286\n",
       "9    Australia              10            7.284"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Happy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These are the Top 10 happy countries in 2015.\n",
    "\n",
    "Switzerland is the happiest country with the score of 7.587"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>Togo</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>158</td>\n",
       "      <td>2.839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>Burundi</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>157</td>\n",
       "      <td>2.905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>Syria</td>\n",
       "      <td>Middle East and Northern Africa</td>\n",
       "      <td>156</td>\n",
       "      <td>3.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>Benin</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>155</td>\n",
       "      <td>3.340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>Rwanda</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>154</td>\n",
       "      <td>3.465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Southern Asia</td>\n",
       "      <td>153</td>\n",
       "      <td>3.575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>Burkina Faso</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>152</td>\n",
       "      <td>3.587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>Ivory Coast</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>151</td>\n",
       "      <td>3.655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>Guinea</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>150</td>\n",
       "      <td>3.656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>Chad</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>149</td>\n",
       "      <td>3.667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Country                           Region  Happiness Rank  \\\n",
       "157          Togo               Sub-Saharan Africa             158   \n",
       "156       Burundi               Sub-Saharan Africa             157   \n",
       "155         Syria  Middle East and Northern Africa             156   \n",
       "154         Benin               Sub-Saharan Africa             155   \n",
       "153        Rwanda               Sub-Saharan Africa             154   \n",
       "152   Afghanistan                    Southern Asia             153   \n",
       "151  Burkina Faso               Sub-Saharan Africa             152   \n",
       "150   Ivory Coast               Sub-Saharan Africa             151   \n",
       "149        Guinea               Sub-Saharan Africa             150   \n",
       "148          Chad               Sub-Saharan Africa             149   \n",
       "\n",
       "     Happiness Score  \n",
       "157            2.839  \n",
       "156            2.905  \n",
       "155            3.006  \n",
       "154            3.340  \n",
       "153            3.465  \n",
       "152            3.575  \n",
       "151            3.587  \n",
       "150            3.655  \n",
       "149            3.656  \n",
       "148            3.667  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[:,[0,1,2,3]].sort_values(by = 'Happiness Rank', ascending = False).head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In 2015, these are the countries with lowest Happiness Index with Togo at the top."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Western Europe', 'North America', 'Australia and New Zealand',\n",
       "       'Middle East and Northern Africa', 'Latin America and Caribbean',\n",
       "       'Southeastern Asia', 'Central and Eastern Europe', 'Eastern Asia',\n",
       "       'Sub-Saharan Africa', 'Southern Asia'], dtype=object)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Region'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count                    158\n",
       "unique                    10\n",
       "top       Sub-Saharan Africa\n",
       "freq                      40\n",
       "Name: Region, dtype: object"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Region'].describe(include = 'all')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The 158 countries are located in 10 different regions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Region-wise Scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "alignmentgroup": "True",
         "hovertemplate": "Region=%{x}<br>Happiness Score=%{y}<extra></extra>",
         "legendgroup": "",
         "marker": {
          "color": "#636efa"
         },
         "name": "",
         "offsetgroup": "",
         "orientation": "v",
         "showlegend": false,
         "textposition": "auto",
         "type": "bar",
         "x": [
          "Western Europe",
          "Western Europe",
          "Western Europe",
          "Western Europe",
          "North America",
          "Western Europe",
          "Western Europe",
          "Western Europe",
          "Australia and New Zealand",
          "Australia and New Zealand",
          "Middle East and Northern Africa",
          "Latin America and Caribbean",
          "Western Europe",
          "Latin America and Caribbean",
          "North America",
          "Latin America and Caribbean",
          "Western Europe",
          "Western Europe",
          "Western Europe",
          "Middle East and Northern Africa",
          "Western Europe",
          "Middle East and Northern Africa",
          "Latin America and Caribbean",
          "Southeastern Asia",
          "Latin America and Caribbean",
          "Western Europe",
          "Latin America and Caribbean",
          "Middle East and Northern Africa",
          "Western Europe",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Latin America and Caribbean",
          "Latin America and Caribbean",
          "Southeastern Asia",
          "Middle East and Northern Africa",
          "Western Europe",
          "Western Europe",
          "Eastern Asia",
          "Middle East and Northern Africa",
          "Latin America and Caribbean",
          "Latin America and Caribbean",
          "Latin America and Caribbean",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Eastern Asia",
          "Eastern Asia",
          "Latin America and Caribbean",
          "Middle East and Northern Africa",
          "Western Europe",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Latin America and Caribbean",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Southeastern Asia",
          "Central and Eastern Europe",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Latin America and Caribbean",
          "Western Europe",
          "Western Europe",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Eastern Asia",
          "Central and Eastern Europe",
          "Southeastern Asia",
          "Southeastern Asia",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Southern Asia",
          "Central and Eastern Europe",
          "Southern Asia",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Eastern Asia",
          "Sub-Saharan Africa",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Western Europe",
          "Central and Eastern Europe",
          "Southeastern Asia",
          "Sub-Saharan Africa",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Central and Eastern Europe",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Latin America and Caribbean",
          "Southeastern Asia",
          "Eastern Asia",
          "Sub-Saharan Africa",
          "Western Europe",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Latin America and Caribbean",
          "Central and Eastern Europe",
          "Middle East and Northern Africa",
          "Middle East and Northern Africa",
          "Southern Asia",
          "Middle East and Northern Africa",
          "Central and Eastern Europe",
          "Middle East and Northern Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Southern Asia",
          "Sub-Saharan Africa",
          "Latin America and Caribbean",
          "Sub-Saharan Africa",
          "Southern Asia",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Southeastern Asia",
          "Central and Eastern Europe",
          "Sub-Saharan Africa",
          "Southern Asia",
          "Sub-Saharan Africa",
          "Central and Eastern Europe",
          "Middle East and Northern Africa",
          "Middle East and Northern Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Southeastern Asia",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Southern Asia",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa",
          "Middle East and Northern Africa",
          "Sub-Saharan Africa",
          "Sub-Saharan Africa"
         ],
         "xaxis": "x",
         "y": [
          7.587000000000001,
          7.561,
          7.527,
          7.522,
          7.4270000000000005,
          7.406000000000001,
          7.377999999999999,
          7.364,
          7.2860000000000005,
          7.284,
          7.278,
          7.226,
          7.2,
          7.187,
          7.119,
          6.983,
          6.946000000000001,
          6.94,
          6.937,
          6.901,
          6.867000000000001,
          6.853,
          6.81,
          6.797999999999999,
          6.7860000000000005,
          6.75,
          6.67,
          6.611000000000001,
          6.575,
          6.574,
          6.505,
          6.485,
          6.477,
          6.455,
          6.4110000000000005,
          6.329,
          6.3020000000000005,
          6.297999999999999,
          6.295,
          6.269,
          6.167999999999999,
          6.13,
          6.122999999999999,
          6.002999999999999,
          5.995,
          5.987,
          5.984,
          5.975,
          5.96,
          5.9479999999999995,
          5.89,
          5.888999999999999,
          5.877999999999999,
          5.855,
          5.848,
          5.832999999999999,
          5.827999999999999,
          5.824,
          5.813,
          5.791,
          5.77,
          5.7589999999999995,
          5.754,
          5.716,
          5.709,
          5.695,
          5.689,
          5.605,
          5.5889999999999995,
          5.547999999999999,
          5.477,
          5.474,
          5.428999999999999,
          5.399,
          5.36,
          5.332000000000001,
          5.2860000000000005,
          5.268,
          5.252999999999999,
          5.212000000000001,
          5.194,
          5.192,
          5.192,
          5.14,
          5.129,
          5.124,
          5.122999999999999,
          5.102,
          5.098,
          5.073,
          5.0569999999999995,
          5.013,
          5.007,
          4.971,
          4.959,
          4.949,
          4.898,
          4.885,
          4.876,
          4.874,
          4.867,
          4.857,
          4.8389999999999995,
          4.8,
          4.788,
          4.7860000000000005,
          4.739,
          4.715,
          4.694,
          4.686,
          4.681,
          4.677,
          4.6419999999999995,
          4.633,
          4.61,
          4.571000000000001,
          4.565,
          4.55,
          4.518,
          4.5169999999999995,
          4.513999999999999,
          4.512,
          4.507,
          4.436,
          4.419,
          4.369,
          4.35,
          4.332,
          4.3069999999999995,
          4.297,
          4.292,
          4.271,
          4.252,
          4.218,
          4.194,
          4.077,
          4.033,
          3.995,
          3.989,
          3.9560000000000004,
          3.931,
          3.904,
          3.8960000000000004,
          3.845,
          3.819,
          3.781,
          3.681,
          3.678,
          3.667,
          3.656,
          3.655,
          3.5869999999999997,
          3.575,
          3.465,
          3.34,
          3.0060000000000002,
          2.905,
          2.839
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "barmode": "relative",
        "legend": {
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Region"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"d8c19084-3422-419a-abdd-0f98111db477\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"d8c19084-3422-419a-abdd-0f98111db477\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'd8c19084-3422-419a-abdd-0f98111db477',\n",
       "                        [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"Region=%{x}<br>Happiness Score=%{y}<extra></extra>\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"textposition\": \"auto\", \"type\": \"bar\", \"x\": [\"Western Europe\", \"Western Europe\", \"Western Europe\", \"Western Europe\", \"North America\", \"Western Europe\", \"Western Europe\", \"Western Europe\", \"Australia and New Zealand\", \"Australia and New Zealand\", \"Middle East and Northern Africa\", \"Latin America and Caribbean\", \"Western Europe\", \"Latin America and Caribbean\", \"North America\", \"Latin America and Caribbean\", \"Western Europe\", \"Western Europe\", \"Western Europe\", \"Middle East and Northern Africa\", \"Western Europe\", \"Middle East and Northern Africa\", \"Latin America and Caribbean\", \"Southeastern Asia\", \"Latin America and Caribbean\", \"Western Europe\", \"Latin America and Caribbean\", \"Middle East and Northern Africa\", \"Western Europe\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Latin America and Caribbean\", \"Latin America and Caribbean\", \"Southeastern Asia\", \"Middle East and Northern Africa\", \"Western Europe\", \"Western Europe\", \"Eastern Asia\", \"Middle East and Northern Africa\", \"Latin America and Caribbean\", \"Latin America and Caribbean\", \"Latin America and Caribbean\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Eastern Asia\", \"Eastern Asia\", \"Latin America and Caribbean\", \"Middle East and Northern Africa\", \"Western Europe\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Latin America and Caribbean\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Southeastern Asia\", \"Central and Eastern Europe\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Latin America and Caribbean\", \"Western Europe\", \"Western Europe\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Eastern Asia\", \"Central and Eastern Europe\", \"Southeastern Asia\", \"Southeastern Asia\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Southern Asia\", \"Central and Eastern Europe\", \"Southern Asia\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Eastern Asia\", \"Sub-Saharan Africa\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Western Europe\", \"Central and Eastern Europe\", \"Southeastern Asia\", \"Sub-Saharan Africa\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Central and Eastern Europe\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Latin America and Caribbean\", \"Southeastern Asia\", \"Eastern Asia\", \"Sub-Saharan Africa\", \"Western Europe\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Latin America and Caribbean\", \"Central and Eastern Europe\", \"Middle East and Northern Africa\", \"Middle East and Northern Africa\", \"Southern Asia\", \"Middle East and Northern Africa\", \"Central and Eastern Europe\", \"Middle East and Northern Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Southern Asia\", \"Sub-Saharan Africa\", \"Latin America and Caribbean\", \"Sub-Saharan Africa\", \"Southern Asia\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Southeastern Asia\", \"Central and Eastern Europe\", \"Sub-Saharan Africa\", \"Southern Asia\", \"Sub-Saharan Africa\", \"Central and Eastern Europe\", \"Middle East and Northern Africa\", \"Middle East and Northern Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Southeastern Asia\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Southern Asia\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\", \"Middle East and Northern Africa\", \"Sub-Saharan Africa\", \"Sub-Saharan Africa\"], \"xaxis\": \"x\", \"y\": [7.587000000000001, 7.561, 7.527, 7.522, 7.4270000000000005, 7.406000000000001, 7.377999999999999, 7.364, 7.2860000000000005, 7.284, 7.278, 7.226, 7.2, 7.187, 7.119, 6.983, 6.946000000000001, 6.94, 6.937, 6.901, 6.867000000000001, 6.853, 6.81, 6.797999999999999, 6.7860000000000005, 6.75, 6.67, 6.611000000000001, 6.575, 6.574, 6.505, 6.485, 6.477, 6.455, 6.4110000000000005, 6.329, 6.3020000000000005, 6.297999999999999, 6.295, 6.269, 6.167999999999999, 6.13, 6.122999999999999, 6.002999999999999, 5.995, 5.987, 5.984, 5.975, 5.96, 5.9479999999999995, 5.89, 5.888999999999999, 5.877999999999999, 5.855, 5.848, 5.832999999999999, 5.827999999999999, 5.824, 5.813, 5.791, 5.77, 5.7589999999999995, 5.754, 5.716, 5.709, 5.695, 5.689, 5.605, 5.5889999999999995, 5.547999999999999, 5.477, 5.474, 5.428999999999999, 5.399, 5.36, 5.332000000000001, 5.2860000000000005, 5.268, 5.252999999999999, 5.212000000000001, 5.194, 5.192, 5.192, 5.14, 5.129, 5.124, 5.122999999999999, 5.102, 5.098, 5.073, 5.0569999999999995, 5.013, 5.007, 4.971, 4.959, 4.949, 4.898, 4.885, 4.876, 4.874, 4.867, 4.857, 4.8389999999999995, 4.8, 4.788, 4.7860000000000005, 4.739, 4.715, 4.694, 4.686, 4.681, 4.677, 4.6419999999999995, 4.633, 4.61, 4.571000000000001, 4.565, 4.55, 4.518, 4.5169999999999995, 4.513999999999999, 4.512, 4.507, 4.436, 4.419, 4.369, 4.35, 4.332, 4.3069999999999995, 4.297, 4.292, 4.271, 4.252, 4.218, 4.194, 4.077, 4.033, 3.995, 3.989, 3.9560000000000004, 3.931, 3.904, 3.8960000000000004, 3.845, 3.819, 3.781, 3.681, 3.678, 3.667, 3.656, 3.655, 3.5869999999999997, 3.575, 3.465, 3.34, 3.0060000000000002, 2.905, 2.839], \"yaxis\": \"y\"}],\n",
       "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Region\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('d8c19084-3422-419a-abdd-0f98111db477');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "#df_a = px.df.query(\" == 'Canada'\")\n",
    "fig = px.bar(df, x='Region', y='Happiness Score')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above graph, we can see that most countries belongs to the following 3 regions:\n",
    "\n",
    "1. Sub-Saharan Africa\n",
    "2. Central and Eastern Europe\n",
    "3. Western Europe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Sub-Saharan Africa\n",
    "\n",
    "\n",
    "We will observe the major factors impacting to the index.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>Mauritius</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>71</td>\n",
       "      <td>5.477</td>\n",
       "      <td>0.07197</td>\n",
       "      <td>1.00761</td>\n",
       "      <td>0.98521</td>\n",
       "      <td>0.70950</td>\n",
       "      <td>0.56066</td>\n",
       "      <td>0.07521</td>\n",
       "      <td>0.37744</td>\n",
       "      <td>1.76145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>Nigeria</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>78</td>\n",
       "      <td>5.268</td>\n",
       "      <td>0.04192</td>\n",
       "      <td>0.65435</td>\n",
       "      <td>0.90432</td>\n",
       "      <td>0.16007</td>\n",
       "      <td>0.34334</td>\n",
       "      <td>0.04030</td>\n",
       "      <td>0.27233</td>\n",
       "      <td>2.89319</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Country              Region  Happiness Rank  Happiness Score  \\\n",
       "70  Mauritius  Sub-Saharan Africa              71            5.477   \n",
       "77    Nigeria  Sub-Saharan Africa              78            5.268   \n",
       "\n",
       "    Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "70         0.07197                   1.00761  0.98521   \n",
       "77         0.04192                   0.65435  0.90432   \n",
       "\n",
       "    Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "70                   0.70950  0.56066                        0.07521   \n",
       "77                   0.16007  0.34334                        0.04030   \n",
       "\n",
       "    Generosity  Dystopia Residual  \n",
       "70     0.37744            1.76145  \n",
       "77     0.27233            2.89319  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e = df.loc[lambda df: df['Region'] == 'Sub-Saharan Africa']\n",
    "e.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>Djibouti</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Rank</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>127.9</td>\n",
       "      <td>22.8639</td>\n",
       "      <td>71</td>\n",
       "      <td>115.75</td>\n",
       "      <td>132</td>\n",
       "      <td>146.25</td>\n",
       "      <td>158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Score</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.2028</td>\n",
       "      <td>0.609557</td>\n",
       "      <td>2.839</td>\n",
       "      <td>3.756</td>\n",
       "      <td>4.272</td>\n",
       "      <td>4.58075</td>\n",
       "      <td>5.477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Standard Error</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0552987</td>\n",
       "      <td>0.0187568</td>\n",
       "      <td>0.03464</td>\n",
       "      <td>0.0413075</td>\n",
       "      <td>0.047775</td>\n",
       "      <td>0.0673025</td>\n",
       "      <td>0.11068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.380473</td>\n",
       "      <td>0.282264</td>\n",
       "      <td>0</td>\n",
       "      <td>0.203863</td>\n",
       "      <td>0.308445</td>\n",
       "      <td>0.483052</td>\n",
       "      <td>1.06024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.809085</td>\n",
       "      <td>0.267819</td>\n",
       "      <td>0</td>\n",
       "      <td>0.676657</td>\n",
       "      <td>0.878375</td>\n",
       "      <td>1.00157</td>\n",
       "      <td>1.18468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.282332</td>\n",
       "      <td>0.145906</td>\n",
       "      <td>0</td>\n",
       "      <td>0.16514</td>\n",
       "      <td>0.298155</td>\n",
       "      <td>0.372122</td>\n",
       "      <td>0.7095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Freedom</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.365944</td>\n",
       "      <td>0.120693</td>\n",
       "      <td>0.10081</td>\n",
       "      <td>0.301262</td>\n",
       "      <td>0.38291</td>\n",
       "      <td>0.46201</td>\n",
       "      <td>0.59201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.123878</td>\n",
       "      <td>0.0969412</td>\n",
       "      <td>0.0306</td>\n",
       "      <td>0.0723075</td>\n",
       "      <td>0.103875</td>\n",
       "      <td>0.13289</td>\n",
       "      <td>0.55191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Generosity</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.221137</td>\n",
       "      <td>0.0809119</td>\n",
       "      <td>0.06822</td>\n",
       "      <td>0.182598</td>\n",
       "      <td>0.207305</td>\n",
       "      <td>0.243342</td>\n",
       "      <td>0.50318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dystopia Residual</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.01998</td>\n",
       "      <td>0.553476</td>\n",
       "      <td>0.67042</td>\n",
       "      <td>1.66933</td>\n",
       "      <td>1.95005</td>\n",
       "      <td>2.45826</td>\n",
       "      <td>3.05137</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              count unique                 top freq  \\\n",
       "Country                          40     40            Djibouti    1   \n",
       "Region                           40      1  Sub-Saharan Africa   40   \n",
       "Happiness Rank                   40    NaN                 NaN  NaN   \n",
       "Happiness Score                  40    NaN                 NaN  NaN   \n",
       "Standard Error                   40    NaN                 NaN  NaN   \n",
       "Economy (GDP per Capita)         40    NaN                 NaN  NaN   \n",
       "Family                           40    NaN                 NaN  NaN   \n",
       "Health (Life Expectancy)         40    NaN                 NaN  NaN   \n",
       "Freedom                          40    NaN                 NaN  NaN   \n",
       "Trust (Government Corruption)    40    NaN                 NaN  NaN   \n",
       "Generosity                       40    NaN                 NaN  NaN   \n",
       "Dystopia Residual                40    NaN                 NaN  NaN   \n",
       "\n",
       "                                    mean        std      min        25%  \\\n",
       "Country                              NaN        NaN      NaN        NaN   \n",
       "Region                               NaN        NaN      NaN        NaN   \n",
       "Happiness Rank                     127.9    22.8639       71     115.75   \n",
       "Happiness Score                   4.2028   0.609557    2.839      3.756   \n",
       "Standard Error                 0.0552987  0.0187568  0.03464  0.0413075   \n",
       "Economy (GDP per Capita)        0.380473   0.282264        0   0.203863   \n",
       "Family                          0.809085   0.267819        0   0.676657   \n",
       "Health (Life Expectancy)        0.282332   0.145906        0    0.16514   \n",
       "Freedom                         0.365944   0.120693  0.10081   0.301262   \n",
       "Trust (Government Corruption)   0.123878  0.0969412   0.0306  0.0723075   \n",
       "Generosity                      0.221137  0.0809119  0.06822   0.182598   \n",
       "Dystopia Residual                2.01998   0.553476  0.67042    1.66933   \n",
       "\n",
       "                                    50%        75%      max  \n",
       "Country                             NaN        NaN      NaN  \n",
       "Region                              NaN        NaN      NaN  \n",
       "Happiness Rank                      132     146.25      158  \n",
       "Happiness Score                   4.272    4.58075    5.477  \n",
       "Standard Error                 0.047775  0.0673025  0.11068  \n",
       "Economy (GDP per Capita)       0.308445   0.483052  1.06024  \n",
       "Family                         0.878375    1.00157  1.18468  \n",
       "Health (Life Expectancy)       0.298155   0.372122   0.7095  \n",
       "Freedom                         0.38291    0.46201  0.59201  \n",
       "Trust (Government Corruption)  0.103875    0.13289  0.55191  \n",
       "Generosity                     0.207305   0.243342  0.50318  \n",
       "Dystopia Residual               1.95005    2.45826  3.05137  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "e.describe(include = 'all').T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "alignmentgroup": "True",
         "hovertemplate": "Country=%{x}<br>Happiness Score=%{y}<extra></extra>",
         "legendgroup": "",
         "marker": {
          "color": "#636efa"
         },
         "name": "",
         "offsetgroup": "",
         "orientation": "v",
         "showlegend": false,
         "textposition": "auto",
         "type": "bar",
         "x": [
          "Mauritius",
          "Nigeria",
          "Zambia",
          "Somaliland region",
          "Mozambique",
          "Lesotho",
          "Swaziland",
          "South Africa",
          "Ghana",
          "Zimbabwe",
          "Liberia",
          "Sudan",
          "Congo (Kinshasa)",
          "Ethiopia",
          "Sierra Leone",
          "Mauritania",
          "Kenya",
          "Djibouti",
          "Botswana",
          "Malawi",
          "Cameroon",
          "Angola",
          "Mali",
          "Congo (Brazzaville)",
          "Comoros",
          "Uganda",
          "Senegal",
          "Gabon",
          "Niger",
          "Tanzania",
          "Madagascar",
          "Central African Republic",
          "Chad",
          "Guinea",
          "Ivory Coast",
          "Burkina Faso",
          "Rwanda",
          "Benin",
          "Burundi",
          "Togo"
         ],
         "xaxis": "x",
         "y": [
          5.477,
          5.268,
          5.129,
          5.0569999999999995,
          4.971,
          4.898,
          4.867,
          4.6419999999999995,
          4.633,
          4.61,
          4.571000000000001,
          4.55,
          4.5169999999999995,
          4.512,
          4.507,
          4.436,
          4.419,
          4.369,
          4.332,
          4.292,
          4.252,
          4.033,
          3.995,
          3.989,
          3.9560000000000004,
          3.931,
          3.904,
          3.8960000000000004,
          3.845,
          3.781,
          3.681,
          3.678,
          3.667,
          3.656,
          3.655,
          3.5869999999999997,
          3.465,
          3.34,
          2.905,
          2.839
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "barmode": "relative",
        "legend": {
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Country"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"f0e7774d-8de6-4e59-8c26-284219feda8b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"f0e7774d-8de6-4e59-8c26-284219feda8b\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'f0e7774d-8de6-4e59-8c26-284219feda8b',\n",
       "                        [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"Country=%{x}<br>Happiness Score=%{y}<extra></extra>\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"textposition\": \"auto\", \"type\": \"bar\", \"x\": [\"Mauritius\", \"Nigeria\", \"Zambia\", \"Somaliland region\", \"Mozambique\", \"Lesotho\", \"Swaziland\", \"South Africa\", \"Ghana\", \"Zimbabwe\", \"Liberia\", \"Sudan\", \"Congo (Kinshasa)\", \"Ethiopia\", \"Sierra Leone\", \"Mauritania\", \"Kenya\", \"Djibouti\", \"Botswana\", \"Malawi\", \"Cameroon\", \"Angola\", \"Mali\", \"Congo (Brazzaville)\", \"Comoros\", \"Uganda\", \"Senegal\", \"Gabon\", \"Niger\", \"Tanzania\", \"Madagascar\", \"Central African Republic\", \"Chad\", \"Guinea\", \"Ivory Coast\", \"Burkina Faso\", \"Rwanda\", \"Benin\", \"Burundi\", \"Togo\"], \"xaxis\": \"x\", \"y\": [5.477, 5.268, 5.129, 5.0569999999999995, 4.971, 4.898, 4.867, 4.6419999999999995, 4.633, 4.61, 4.571000000000001, 4.55, 4.5169999999999995, 4.512, 4.507, 4.436, 4.419, 4.369, 4.332, 4.292, 4.252, 4.033, 3.995, 3.989, 3.9560000000000004, 3.931, 3.904, 3.8960000000000004, 3.845, 3.781, 3.681, 3.678, 3.667, 3.656, 3.655, 3.5869999999999997, 3.465, 3.34, 2.905, 2.839], \"yaxis\": \"y\"}],\n",
       "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Country\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('f0e7774d-8de6-4e59-8c26-284219feda8b');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "#df_a = px.df.query(\" == 'Canada'\")\n",
    "fig = px.bar(e, x='Country', y='Happiness Score')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Out of 158 countries, 40 countries are from Sub-Saharan Africa region with the average Happiness Score of 4.2028\n",
    "\n",
    "We can observe that Mauritius with the rank 71 and score 5.477 is the happiest in the region.\n",
    "\n",
    "Togo is the most unhappy with rank 158 and score 2.839"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "hovertemplate": "Happiness Score=%{x}<br>Trust (Government Corruption)=%{y}<extra></extra>",
         "legendgroup": "",
         "line": {
          "color": "#636efa",
          "dash": "solid"
         },
         "mode": "lines",
         "name": "",
         "showlegend": false,
         "type": "scatter",
         "x": [
          7.587000000000001,
          7.561,
          7.527,
          7.522,
          7.4270000000000005,
          7.406000000000001,
          7.377999999999999,
          7.364,
          7.2860000000000005,
          7.284,
          7.278,
          7.226,
          7.2,
          7.187,
          7.119,
          6.983,
          6.946000000000001,
          6.94,
          6.937,
          6.901,
          6.867000000000001,
          6.853,
          6.81,
          6.797999999999999,
          6.7860000000000005,
          6.75,
          6.67,
          6.611000000000001,
          6.575,
          6.574,
          6.505,
          6.485,
          6.477,
          6.455,
          6.4110000000000005,
          6.329,
          6.3020000000000005,
          6.297999999999999,
          6.295,
          6.269,
          6.167999999999999,
          6.13,
          6.122999999999999,
          6.002999999999999,
          5.995,
          5.987,
          5.984,
          5.975,
          5.96,
          5.9479999999999995,
          5.89,
          5.888999999999999,
          5.877999999999999,
          5.855,
          5.848,
          5.832999999999999,
          5.827999999999999,
          5.824,
          5.813,
          5.791,
          5.77,
          5.7589999999999995,
          5.754,
          5.716,
          5.709,
          5.695,
          5.689,
          5.605,
          5.5889999999999995,
          5.547999999999999,
          5.477,
          5.474,
          5.428999999999999,
          5.399,
          5.36,
          5.332000000000001,
          5.2860000000000005,
          5.268,
          5.252999999999999,
          5.212000000000001,
          5.194,
          5.192,
          5.192,
          5.14,
          5.129,
          5.124,
          5.122999999999999,
          5.102,
          5.098,
          5.073,
          5.0569999999999995,
          5.013,
          5.007,
          4.971,
          4.959,
          4.949,
          4.898,
          4.885,
          4.876,
          4.874,
          4.867,
          4.857,
          4.8389999999999995,
          4.8,
          4.788,
          4.7860000000000005,
          4.739,
          4.715,
          4.694,
          4.686,
          4.681,
          4.677,
          4.6419999999999995,
          4.633,
          4.61,
          4.571000000000001,
          4.565,
          4.55,
          4.518,
          4.5169999999999995,
          4.513999999999999,
          4.512,
          4.507,
          4.436,
          4.419,
          4.369,
          4.35,
          4.332,
          4.3069999999999995,
          4.297,
          4.292,
          4.271,
          4.252,
          4.218,
          4.194,
          4.077,
          4.033,
          3.995,
          3.989,
          3.9560000000000004,
          3.931,
          3.904,
          3.8960000000000004,
          3.845,
          3.819,
          3.781,
          3.681,
          3.678,
          3.667,
          3.656,
          3.655,
          3.5869999999999997,
          3.575,
          3.465,
          3.34,
          3.0060000000000002,
          2.905,
          2.839
         ],
         "xaxis": "x",
         "y": [
          0.41978000000000004,
          0.14145,
          0.48357,
          0.36503,
          0.32957,
          0.41372,
          0.31814000000000003,
          0.43843999999999994,
          0.42922,
          0.35636999999999996,
          0.07785,
          0.10583,
          0.18675999999999998,
          0.21311999999999998,
          0.1589,
          0.17521,
          0.37798000000000004,
          0.28703,
          0.2254,
          0.38583,
          0.32066999999999996,
          0.32524000000000003,
          0.11069000000000001,
          0.4921,
          0.0927,
          0.21843,
          0.12869,
          0.52208,
          0.20646,
          0.08484,
          0.02652,
          0.24558000000000002,
          0.0512,
          0.031869999999999996,
          0.32524000000000003,
          0.06398,
          0.13585999999999998,
          0.08129,
          0.25609,
          0.13633,
          0.0114,
          0.11775999999999999,
          0.09472,
          0.30826,
          0.03431,
          0.1806,
          0.07857,
          0.1809,
          0.306,
          0.02901,
          0.08800000000000001,
          0.01615,
          0.08242000000000001,
          0.08454,
          0.03787,
          0.01031,
          0.19317,
          0.05989,
          0.1909,
          0.04212,
          0.10500999999999999,
          0.0243,
          0.11023,
          0.03005,
          0.02299,
          0.1428,
          0.06146,
          0.17382999999999998,
          0.04741,
          0.30844,
          0.07521,
          0.37124,
          0.15184,
          0,
          0.10440999999999999,
          0.15746,
          0.042319999999999997,
          0.0403,
          0.15445,
          0.16065,
          0.10464000000000001,
          0.14293,
          0.14296,
          0.02781,
          0.12468,
          0.006490000000000001,
          0.02617,
          0.01078,
          0.06332,
          0.12279000000000001,
          0.39928,
          0.08546000000000001,
          0.053270000000000005,
          0.15603,
          0.06412999999999999,
          0.00227,
          0.12504,
          0.14234000000000002,
          0.24249,
          0.026660000000000003,
          0.0306,
          0.013969999999999998,
          0.04582,
          0.02758,
          0.06825,
          0.15072,
          0.06358,
          0.12905,
          0.12569,
          0.058629999999999995,
          0.02961,
          0.13788,
          0.08884,
          0.04355,
          0.08079,
          0.06232000000000001,
          0.08492000000000001,
          0.1466,
          0.17175,
          0.07625,
          0.059070000000000004,
          0.15048,
          0.08786000000000001,
          0.17461,
          0.05839,
          0.28105,
          0.039,
          0.12474,
          0.19034,
          0.38331,
          0.06977,
          0.09179,
          0.05786,
          0.00872,
          0.06324,
          0.07854,
          0.07122,
          0.12352,
          0.11685999999999999,
          0.19899999999999998,
          0.07267,
          0.10712999999999999,
          0.11091,
          0.15639,
          0.07247,
          0.05747000000000001,
          0.08123999999999999,
          0.08288999999999999,
          0.05269,
          0.12139000000000001,
          0.17922000000000002,
          0.12832000000000002,
          0.09719,
          0.55191,
          0.0801,
          0.18905999999999998,
          0.10062,
          0.10730999999999999
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "legend": {
         "tracegroupgap": 0
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Sub-Saharan Africa"
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Trust (Government Corruption)"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"e8a0de1c-d449-47a0-ac16-ce3bdc2d61e8\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"e8a0de1c-d449-47a0-ac16-ce3bdc2d61e8\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'e8a0de1c-d449-47a0-ac16-ce3bdc2d61e8',\n",
       "                        [{\"hovertemplate\": \"Happiness Score=%{x}<br>Trust (Government Corruption)=%{y}<extra></extra>\", \"legendgroup\": \"\", \"line\": {\"color\": \"#636efa\", \"dash\": \"solid\"}, \"mode\": \"lines\", \"name\": \"\", \"showlegend\": false, \"type\": \"scatter\", \"x\": [7.587000000000001, 7.561, 7.527, 7.522, 7.4270000000000005, 7.406000000000001, 7.377999999999999, 7.364, 7.2860000000000005, 7.284, 7.278, 7.226, 7.2, 7.187, 7.119, 6.983, 6.946000000000001, 6.94, 6.937, 6.901, 6.867000000000001, 6.853, 6.81, 6.797999999999999, 6.7860000000000005, 6.75, 6.67, 6.611000000000001, 6.575, 6.574, 6.505, 6.485, 6.477, 6.455, 6.4110000000000005, 6.329, 6.3020000000000005, 6.297999999999999, 6.295, 6.269, 6.167999999999999, 6.13, 6.122999999999999, 6.002999999999999, 5.995, 5.987, 5.984, 5.975, 5.96, 5.9479999999999995, 5.89, 5.888999999999999, 5.877999999999999, 5.855, 5.848, 5.832999999999999, 5.827999999999999, 5.824, 5.813, 5.791, 5.77, 5.7589999999999995, 5.754, 5.716, 5.709, 5.695, 5.689, 5.605, 5.5889999999999995, 5.547999999999999, 5.477, 5.474, 5.428999999999999, 5.399, 5.36, 5.332000000000001, 5.2860000000000005, 5.268, 5.252999999999999, 5.212000000000001, 5.194, 5.192, 5.192, 5.14, 5.129, 5.124, 5.122999999999999, 5.102, 5.098, 5.073, 5.0569999999999995, 5.013, 5.007, 4.971, 4.959, 4.949, 4.898, 4.885, 4.876, 4.874, 4.867, 4.857, 4.8389999999999995, 4.8, 4.788, 4.7860000000000005, 4.739, 4.715, 4.694, 4.686, 4.681, 4.677, 4.6419999999999995, 4.633, 4.61, 4.571000000000001, 4.565, 4.55, 4.518, 4.5169999999999995, 4.513999999999999, 4.512, 4.507, 4.436, 4.419, 4.369, 4.35, 4.332, 4.3069999999999995, 4.297, 4.292, 4.271, 4.252, 4.218, 4.194, 4.077, 4.033, 3.995, 3.989, 3.9560000000000004, 3.931, 3.904, 3.8960000000000004, 3.845, 3.819, 3.781, 3.681, 3.678, 3.667, 3.656, 3.655, 3.5869999999999997, 3.575, 3.465, 3.34, 3.0060000000000002, 2.905, 2.839], \"xaxis\": \"x\", \"y\": [0.41978000000000004, 0.14145, 0.48357, 0.36503, 0.32957, 0.41372, 0.31814000000000003, 0.43843999999999994, 0.42922, 0.35636999999999996, 0.07785, 0.10583, 0.18675999999999998, 0.21311999999999998, 0.1589, 0.17521, 0.37798000000000004, 0.28703, 0.2254, 0.38583, 0.32066999999999996, 0.32524000000000003, 0.11069000000000001, 0.4921, 0.0927, 0.21843, 0.12869, 0.52208, 0.20646, 0.08484, 0.02652, 0.24558000000000002, 0.0512, 0.031869999999999996, 0.32524000000000003, 0.06398, 0.13585999999999998, 0.08129, 0.25609, 0.13633, 0.0114, 0.11775999999999999, 0.09472, 0.30826, 0.03431, 0.1806, 0.07857, 0.1809, 0.306, 0.02901, 0.08800000000000001, 0.01615, 0.08242000000000001, 0.08454, 0.03787, 0.01031, 0.19317, 0.05989, 0.1909, 0.04212, 0.10500999999999999, 0.0243, 0.11023, 0.03005, 0.02299, 0.1428, 0.06146, 0.17382999999999998, 0.04741, 0.30844, 0.07521, 0.37124, 0.15184, 0.0, 0.10440999999999999, 0.15746, 0.042319999999999997, 0.0403, 0.15445, 0.16065, 0.10464000000000001, 0.14293, 0.14296, 0.02781, 0.12468, 0.006490000000000001, 0.02617, 0.01078, 0.06332, 0.12279000000000001, 0.39928, 0.08546000000000001, 0.053270000000000005, 0.15603, 0.06412999999999999, 0.00227, 0.12504, 0.14234000000000002, 0.24249, 0.026660000000000003, 0.0306, 0.013969999999999998, 0.04582, 0.02758, 0.06825, 0.15072, 0.06358, 0.12905, 0.12569, 0.058629999999999995, 0.02961, 0.13788, 0.08884, 0.04355, 0.08079, 0.06232000000000001, 0.08492000000000001, 0.1466, 0.17175, 0.07625, 0.059070000000000004, 0.15048, 0.08786000000000001, 0.17461, 0.05839, 0.28105, 0.039, 0.12474, 0.19034, 0.38331, 0.06977, 0.09179, 0.05786, 0.00872, 0.06324, 0.07854, 0.07122, 0.12352, 0.11685999999999999, 0.19899999999999998, 0.07267, 0.10712999999999999, 0.11091, 0.15639, 0.07247, 0.05747000000000001, 0.08123999999999999, 0.08288999999999999, 0.05269, 0.12139000000000001, 0.17922000000000002, 0.12832000000000002, 0.09719, 0.55191, 0.0801, 0.18905999999999998, 0.10062, 0.10730999999999999], \"yaxis\": \"y\"}],\n",
       "                        {\"legend\": {\"tracegroupgap\": 0}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"text\": \"Sub-Saharan Africa\"}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Trust (Government Corruption)\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('e8a0de1c-d449-47a0-ac16-ce3bdc2d61e8');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "df.query(\"Region=='Sub-Saharan Africa'\")\n",
    "fig = px.line(df, x=\"Happiness Score\", y=\"Trust (Government Corruption)\", title='Sub-Saharan Africa')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above graph shows that the population of this region doesn't really trusts the Government."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "e_1 = e.drop('Happiness Rank' , axis = 'columns')\n",
    "hm = e_1.corr()\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "sns.heatmap(hm , annot=True, ax=ax)\n",
    "plt.show();\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the heatmap we can infer the following:\n",
    "\n",
    "1. People are satisfied and happy with their **Famlies**.\n",
    "\n",
    "2. **Economy** plays a significant role in their happiness.\n",
    "\n",
    "3. But, people have no faith in their Government as we can see that it is negatively correlated with the score."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Central and Eastern Europe\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>Central and Eastern Europe</td>\n",
       "      <td>31</td>\n",
       "      <td>6.505</td>\n",
       "      <td>0.04168</td>\n",
       "      <td>1.17898</td>\n",
       "      <td>1.20643</td>\n",
       "      <td>0.84483</td>\n",
       "      <td>0.46364</td>\n",
       "      <td>0.02652</td>\n",
       "      <td>0.10686</td>\n",
       "      <td>2.67782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Uzbekistan</td>\n",
       "      <td>Central and Eastern Europe</td>\n",
       "      <td>44</td>\n",
       "      <td>6.003</td>\n",
       "      <td>0.04361</td>\n",
       "      <td>0.63244</td>\n",
       "      <td>1.34043</td>\n",
       "      <td>0.59772</td>\n",
       "      <td>0.65821</td>\n",
       "      <td>0.30826</td>\n",
       "      <td>0.22837</td>\n",
       "      <td>2.23741</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Country                      Region  Happiness Rank  \\\n",
       "30  Czech Republic  Central and Eastern Europe              31   \n",
       "43      Uzbekistan  Central and Eastern Europe              44   \n",
       "\n",
       "    Happiness Score  Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "30            6.505         0.04168                   1.17898  1.20643   \n",
       "43            6.003         0.04361                   0.63244  1.34043   \n",
       "\n",
       "    Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "30                   0.84483  0.46364                        0.02652   \n",
       "43                   0.59772  0.65821                        0.30826   \n",
       "\n",
       "    Generosity  Dystopia Residual  \n",
       "30     0.10686            2.67782  \n",
       "43     0.22837            2.23741  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f = df.loc[lambda df: df['Region'] == 'Central and Eastern Europe']\n",
    "f.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>Kosovo</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>Central and Eastern Europe</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Rank</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>79</td>\n",
       "      <td>26.6673</td>\n",
       "      <td>31</td>\n",
       "      <td>59</td>\n",
       "      <td>77</td>\n",
       "      <td>95</td>\n",
       "      <td>134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Score</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.33293</td>\n",
       "      <td>0.570446</td>\n",
       "      <td>4.218</td>\n",
       "      <td>4.959</td>\n",
       "      <td>5.286</td>\n",
       "      <td>5.813</td>\n",
       "      <td>6.505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Standard Error</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0452076</td>\n",
       "      <td>0.00895204</td>\n",
       "      <td>0.03135</td>\n",
       "      <td>0.04013</td>\n",
       "      <td>0.04267</td>\n",
       "      <td>0.04864</td>\n",
       "      <td>0.06913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.942438</td>\n",
       "      <td>0.218499</td>\n",
       "      <td>0.39047</td>\n",
       "      <td>0.80148</td>\n",
       "      <td>1.01216</td>\n",
       "      <td>1.12254</td>\n",
       "      <td>1.18498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.05304</td>\n",
       "      <td>0.217005</td>\n",
       "      <td>0.38562</td>\n",
       "      <td>0.90557</td>\n",
       "      <td>1.10614</td>\n",
       "      <td>1.22791</td>\n",
       "      <td>1.34043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.718774</td>\n",
       "      <td>0.0813386</td>\n",
       "      <td>0.53886</td>\n",
       "      <td>0.65088</td>\n",
       "      <td>0.73128</td>\n",
       "      <td>0.77361</td>\n",
       "      <td>0.87337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Freedom</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.358269</td>\n",
       "      <td>0.130925</td>\n",
       "      <td>0.09245</td>\n",
       "      <td>0.25883</td>\n",
       "      <td>0.35068</td>\n",
       "      <td>0.44888</td>\n",
       "      <td>0.65821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0866738</td>\n",
       "      <td>0.100134</td>\n",
       "      <td>0.00227</td>\n",
       "      <td>0.02652</td>\n",
       "      <td>0.04212</td>\n",
       "      <td>0.14296</td>\n",
       "      <td>0.38331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Generosity</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.152264</td>\n",
       "      <td>0.0759547</td>\n",
       "      <td>0.00199</td>\n",
       "      <td>0.10686</td>\n",
       "      <td>0.15275</td>\n",
       "      <td>0.20951</td>\n",
       "      <td>0.3003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dystopia Residual</th>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0214</td>\n",
       "      <td>0.468624</td>\n",
       "      <td>0.89991</td>\n",
       "      <td>1.73933</td>\n",
       "      <td>2.025</td>\n",
       "      <td>2.24639</td>\n",
       "      <td>3.10712</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              count unique                         top freq  \\\n",
       "Country                          29     29                      Kosovo    1   \n",
       "Region                           29      1  Central and Eastern Europe   29   \n",
       "Happiness Rank                   29    NaN                         NaN  NaN   \n",
       "Happiness Score                  29    NaN                         NaN  NaN   \n",
       "Standard Error                   29    NaN                         NaN  NaN   \n",
       "Economy (GDP per Capita)         29    NaN                         NaN  NaN   \n",
       "Family                           29    NaN                         NaN  NaN   \n",
       "Health (Life Expectancy)         29    NaN                         NaN  NaN   \n",
       "Freedom                          29    NaN                         NaN  NaN   \n",
       "Trust (Government Corruption)    29    NaN                         NaN  NaN   \n",
       "Generosity                       29    NaN                         NaN  NaN   \n",
       "Dystopia Residual                29    NaN                         NaN  NaN   \n",
       "\n",
       "                                    mean         std      min      25%  \\\n",
       "Country                              NaN         NaN      NaN      NaN   \n",
       "Region                               NaN         NaN      NaN      NaN   \n",
       "Happiness Rank                        79     26.6673       31       59   \n",
       "Happiness Score                  5.33293    0.570446    4.218    4.959   \n",
       "Standard Error                 0.0452076  0.00895204  0.03135  0.04013   \n",
       "Economy (GDP per Capita)        0.942438    0.218499  0.39047  0.80148   \n",
       "Family                           1.05304    0.217005  0.38562  0.90557   \n",
       "Health (Life Expectancy)        0.718774   0.0813386  0.53886  0.65088   \n",
       "Freedom                         0.358269    0.130925  0.09245  0.25883   \n",
       "Trust (Government Corruption)  0.0866738    0.100134  0.00227  0.02652   \n",
       "Generosity                      0.152264   0.0759547  0.00199  0.10686   \n",
       "Dystopia Residual                 2.0214    0.468624  0.89991  1.73933   \n",
       "\n",
       "                                   50%      75%      max  \n",
       "Country                            NaN      NaN      NaN  \n",
       "Region                             NaN      NaN      NaN  \n",
       "Happiness Rank                      77       95      134  \n",
       "Happiness Score                  5.286    5.813    6.505  \n",
       "Standard Error                 0.04267  0.04864  0.06913  \n",
       "Economy (GDP per Capita)       1.01216  1.12254  1.18498  \n",
       "Family                         1.10614  1.22791  1.34043  \n",
       "Health (Life Expectancy)       0.73128  0.77361  0.87337  \n",
       "Freedom                        0.35068  0.44888  0.65821  \n",
       "Trust (Government Corruption)  0.04212  0.14296  0.38331  \n",
       "Generosity                     0.15275  0.20951   0.3003  \n",
       "Dystopia Residual                2.025  2.24639  3.10712  "
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f.describe(include='all').T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "alignmentgroup": "True",
         "hovertemplate": "Country=%{x}<br>Happiness Score=%{y}<extra></extra>",
         "legendgroup": "",
         "marker": {
          "color": "#636efa"
         },
         "name": "",
         "offsetgroup": "",
         "orientation": "v",
         "showlegend": false,
         "textposition": "auto",
         "type": "bar",
         "x": [
          "Czech Republic",
          "Uzbekistan",
          "Slovakia",
          "Moldova",
          "Kazakhstan",
          "Slovenia",
          "Lithuania",
          "Belarus",
          "Poland",
          "Croatia",
          "Russia",
          "Kosovo",
          "Turkmenistan",
          "Estonia",
          "Kyrgyzstan",
          "Azerbaijan",
          "Montenegro",
          "Romania",
          "Serbia",
          "Latvia",
          "Macedonia",
          "Albania",
          "Bosnia and Herzegovina",
          "Hungary",
          "Tajikistan",
          "Ukraine",
          "Armenia",
          "Georgia",
          "Bulgaria"
         ],
         "xaxis": "x",
         "y": [
          6.505,
          6.002999999999999,
          5.995,
          5.888999999999999,
          5.855,
          5.848,
          5.832999999999999,
          5.813,
          5.791,
          5.7589999999999995,
          5.716,
          5.5889999999999995,
          5.547999999999999,
          5.428999999999999,
          5.2860000000000005,
          5.212000000000001,
          5.192,
          5.124,
          5.122999999999999,
          5.098,
          5.007,
          4.959,
          4.949,
          4.8,
          4.7860000000000005,
          4.681,
          4.35,
          4.297,
          4.218
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "barmode": "relative",
        "legend": {
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Country"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"55a79d35-8c70-4c43-8f8d-b0aecd37ac8e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"55a79d35-8c70-4c43-8f8d-b0aecd37ac8e\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '55a79d35-8c70-4c43-8f8d-b0aecd37ac8e',\n",
       "                        [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"Country=%{x}<br>Happiness Score=%{y}<extra></extra>\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"textposition\": \"auto\", \"type\": \"bar\", \"x\": [\"Czech Republic\", \"Uzbekistan\", \"Slovakia\", \"Moldova\", \"Kazakhstan\", \"Slovenia\", \"Lithuania\", \"Belarus\", \"Poland\", \"Croatia\", \"Russia\", \"Kosovo\", \"Turkmenistan\", \"Estonia\", \"Kyrgyzstan\", \"Azerbaijan\", \"Montenegro\", \"Romania\", \"Serbia\", \"Latvia\", \"Macedonia\", \"Albania\", \"Bosnia and Herzegovina\", \"Hungary\", \"Tajikistan\", \"Ukraine\", \"Armenia\", \"Georgia\", \"Bulgaria\"], \"xaxis\": \"x\", \"y\": [6.505, 6.002999999999999, 5.995, 5.888999999999999, 5.855, 5.848, 5.832999999999999, 5.813, 5.791, 5.7589999999999995, 5.716, 5.5889999999999995, 5.547999999999999, 5.428999999999999, 5.2860000000000005, 5.212000000000001, 5.192, 5.124, 5.122999999999999, 5.098, 5.007, 4.959, 4.949, 4.8, 4.7860000000000005, 4.681, 4.35, 4.297, 4.218], \"yaxis\": \"y\"}],\n",
       "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Country\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('55a79d35-8c70-4c43-8f8d-b0aecd37ac8e');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "fig = px.bar(f, x='Country', y='Happiness Score')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Out of 158 countries, 29 are from Central and Eastern Europe with the average happiness score of 5.33293\n",
    "\n",
    "From the above graph, we can see the ranks of all the countries present in this region\n",
    "\n",
    "Czech Republic is the happiest in this region with the rank 31 and score 6.505"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "hovertemplate": "Happiness Score=%{x}<br>Family=%{y}<extra></extra>",
         "legendgroup": "",
         "line": {
          "color": "#636efa",
          "dash": "solid"
         },
         "mode": "lines",
         "name": "",
         "showlegend": false,
         "type": "scatter",
         "x": [
          6.505,
          6.002999999999999,
          5.995,
          5.888999999999999,
          5.855,
          5.848,
          5.832999999999999,
          5.813,
          5.791,
          5.7589999999999995,
          5.716,
          5.5889999999999995,
          5.547999999999999,
          5.428999999999999,
          5.2860000000000005,
          5.212000000000001,
          5.192,
          5.124,
          5.122999999999999,
          5.098,
          5.007,
          4.959,
          4.949,
          4.8,
          4.7860000000000005,
          4.681,
          4.35,
          4.297,
          4.218
         ],
         "xaxis": "x",
         "y": [
          1.20643,
          1.34043,
          1.26999,
          1.01528,
          1.1224100000000001,
          1.27385,
          1.25745,
          1.23289,
          1.27948,
          0.79624,
          1.23617,
          0.81198,
          1.22668,
          1.22791,
          1.15115,
          0.9379299999999999,
          0.9055700000000001,
          0.8858799999999999,
          1.0096399999999999,
          1.09562,
          1.00232,
          0.8043399999999999,
          0.9191600000000001,
          1.20215,
          0.8556299999999999,
          1.20278,
          0.7771100000000001,
          0.38561999999999996,
          1.10614
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "legend": {
         "tracegroupgap": 0
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Central and Eastern Europe"
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Family"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"dbea043a-3c10-4a0f-9559-bbfee6df15a3\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"dbea043a-3c10-4a0f-9559-bbfee6df15a3\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'dbea043a-3c10-4a0f-9559-bbfee6df15a3',\n",
       "                        [{\"hovertemplate\": \"Happiness Score=%{x}<br>Family=%{y}<extra></extra>\", \"legendgroup\": \"\", \"line\": {\"color\": \"#636efa\", \"dash\": \"solid\"}, \"mode\": \"lines\", \"name\": \"\", \"showlegend\": false, \"type\": \"scatter\", \"x\": [6.505, 6.002999999999999, 5.995, 5.888999999999999, 5.855, 5.848, 5.832999999999999, 5.813, 5.791, 5.7589999999999995, 5.716, 5.5889999999999995, 5.547999999999999, 5.428999999999999, 5.2860000000000005, 5.212000000000001, 5.192, 5.124, 5.122999999999999, 5.098, 5.007, 4.959, 4.949, 4.8, 4.7860000000000005, 4.681, 4.35, 4.297, 4.218], \"xaxis\": \"x\", \"y\": [1.20643, 1.34043, 1.26999, 1.01528, 1.1224100000000001, 1.27385, 1.25745, 1.23289, 1.27948, 0.79624, 1.23617, 0.81198, 1.22668, 1.22791, 1.15115, 0.9379299999999999, 0.9055700000000001, 0.8858799999999999, 1.0096399999999999, 1.09562, 1.00232, 0.8043399999999999, 0.9191600000000001, 1.20215, 0.8556299999999999, 1.20278, 0.7771100000000001, 0.38561999999999996, 1.10614], \"yaxis\": \"y\"}],\n",
       "                        {\"legend\": {\"tracegroupgap\": 0}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"text\": \"Central and Eastern Europe\"}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Family\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('dbea043a-3c10-4a0f-9559-bbfee6df15a3');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "df.query(\"Region=='Central and Eastern Europe'\")\n",
    "fig = px.line(f, x=\"Happiness Score\", y=\"Family\", title='Central and Eastern Europe')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Family has a positive impact on happiness."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f_1 = f.drop('Happiness Rank' , axis = 'columns')\n",
    "hm = f_1.corr()\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "sns.heatmap(hm , annot=True, ax=ax, cmap='pink')\n",
    "plt.show();\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Family and Freedom has a greater impact on the Happiness of people. While, Economy also has relatively less impact.\n",
    "\n",
    "People really don't trust their government as it is negatively correlated.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Western Europe\n",
    "\n",
    "Now we will see what are the major factors that impact the happiness index in Europe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "d = df.loc[lambda df: df['Region'] == 'Western Europe']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Finland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>6</td>\n",
       "      <td>7.406</td>\n",
       "      <td>0.03140</td>\n",
       "      <td>1.29025</td>\n",
       "      <td>1.31826</td>\n",
       "      <td>0.88911</td>\n",
       "      <td>0.64169</td>\n",
       "      <td>0.41372</td>\n",
       "      <td>0.23351</td>\n",
       "      <td>2.61955</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country          Region  Happiness Rank  Happiness Score  \\\n",
       "0  Switzerland  Western Europe               1            7.587   \n",
       "1      Iceland  Western Europe               2            7.561   \n",
       "2      Denmark  Western Europe               3            7.527   \n",
       "3       Norway  Western Europe               4            7.522   \n",
       "5      Finland  Western Europe               6            7.406   \n",
       "\n",
       "   Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "0         0.03411                   1.39651  1.34951   \n",
       "1         0.04884                   1.30232  1.40223   \n",
       "2         0.03328                   1.32548  1.36058   \n",
       "3         0.03880                   1.45900  1.33095   \n",
       "5         0.03140                   1.29025  1.31826   \n",
       "\n",
       "   Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "0                   0.94143  0.66557                        0.41978   \n",
       "1                   0.94784  0.62877                        0.14145   \n",
       "2                   0.87464  0.64938                        0.48357   \n",
       "3                   0.88521  0.66973                        0.36503   \n",
       "5                   0.88911  0.64169                        0.41372   \n",
       "\n",
       "   Generosity  Dystopia Residual  \n",
       "0     0.29678            2.51738  \n",
       "1     0.43630            2.70201  \n",
       "2     0.34139            2.49204  \n",
       "3     0.34699            2.46531  \n",
       "5     0.23351            2.61955  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>North Cyprus</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Rank</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29.5238</td>\n",
       "      <td>29.2688</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>37</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Score</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.68962</td>\n",
       "      <td>0.824582</td>\n",
       "      <td>4.857</td>\n",
       "      <td>6.302</td>\n",
       "      <td>6.937</td>\n",
       "      <td>7.378</td>\n",
       "      <td>7.587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Standard Error</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0376252</td>\n",
       "      <td>0.0101443</td>\n",
       "      <td>0.01848</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>0.03595</td>\n",
       "      <td>0.04206</td>\n",
       "      <td>0.05635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.2986</td>\n",
       "      <td>0.0963411</td>\n",
       "      <td>1.15406</td>\n",
       "      <td>1.23011</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.33171</td>\n",
       "      <td>1.56391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.2473</td>\n",
       "      <td>0.135195</td>\n",
       "      <td>0.89318</td>\n",
       "      <td>1.21963</td>\n",
       "      <td>1.28907</td>\n",
       "      <td>1.31826</td>\n",
       "      <td>1.40223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.909148</td>\n",
       "      <td>0.0268337</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.88911</td>\n",
       "      <td>0.89667</td>\n",
       "      <td>0.92356</td>\n",
       "      <td>0.95562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Freedom</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.549926</td>\n",
       "      <td>0.147211</td>\n",
       "      <td>0.07699</td>\n",
       "      <td>0.51469</td>\n",
       "      <td>0.61477</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.66973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.231463</td>\n",
       "      <td>0.150801</td>\n",
       "      <td>0.01078</td>\n",
       "      <td>0.13586</td>\n",
       "      <td>0.21843</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.48357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Generosity</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.302109</td>\n",
       "      <td>0.133845</td>\n",
       "      <td>0</td>\n",
       "      <td>0.22823</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>0.36262</td>\n",
       "      <td>0.51912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dystopia Residual</th>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.15119</td>\n",
       "      <td>0.379951</td>\n",
       "      <td>1.26462</td>\n",
       "      <td>1.96961</td>\n",
       "      <td>2.12367</td>\n",
       "      <td>2.4657</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              count unique             top freq       mean  \\\n",
       "Country                          21     21    North Cyprus    1        NaN   \n",
       "Region                           21      1  Western Europe   21        NaN   \n",
       "Happiness Rank                   21    NaN             NaN  NaN    29.5238   \n",
       "Happiness Score                  21    NaN             NaN  NaN    6.68962   \n",
       "Standard Error                   21    NaN             NaN  NaN  0.0376252   \n",
       "Economy (GDP per Capita)         21    NaN             NaN  NaN     1.2986   \n",
       "Family                           21    NaN             NaN  NaN     1.2473   \n",
       "Health (Life Expectancy)         21    NaN             NaN  NaN   0.909148   \n",
       "Freedom                          21    NaN             NaN  NaN   0.549926   \n",
       "Trust (Government Corruption)    21    NaN             NaN  NaN   0.231463   \n",
       "Generosity                       21    NaN             NaN  NaN   0.302109   \n",
       "Dystopia Residual                21    NaN             NaN  NaN    2.15119   \n",
       "\n",
       "                                     std      min      25%      50%      75%  \\\n",
       "Country                              NaN      NaN      NaN      NaN      NaN   \n",
       "Region                               NaN      NaN      NaN      NaN      NaN   \n",
       "Happiness Rank                   29.2688        1        7       19       37   \n",
       "Happiness Score                 0.824582    4.857    6.302    6.937    7.378   \n",
       "Standard Error                 0.0101443  0.01848  0.03328  0.03595  0.04206   \n",
       "Economy (GDP per Capita)       0.0963411  1.15406  1.23011  1.30232  1.33171   \n",
       "Family                          0.135195  0.89318  1.21963  1.28907  1.31826   \n",
       "Health (Life Expectancy)       0.0268337  0.87464  0.88911  0.89667  0.92356   \n",
       "Freedom                         0.147211  0.07699  0.51469  0.61477  0.62877   \n",
       "Trust (Government Corruption)   0.150801  0.01078  0.13586  0.21843  0.36503   \n",
       "Generosity                      0.133845        0  0.22823  0.29678  0.36262   \n",
       "Dystopia Residual               0.379951  1.26462  1.96961  2.12367   2.4657   \n",
       "\n",
       "                                   max  \n",
       "Country                            NaN  \n",
       "Region                             NaN  \n",
       "Happiness Rank                     102  \n",
       "Happiness Score                  7.587  \n",
       "Standard Error                 0.05635  \n",
       "Economy (GDP per Capita)       1.56391  \n",
       "Family                         1.40223  \n",
       "Health (Life Expectancy)       0.95562  \n",
       "Freedom                        0.66973  \n",
       "Trust (Government Corruption)  0.48357  \n",
       "Generosity                     0.51912  \n",
       "Dystopia Residual              2.70201  "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.describe(include = 'all').T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Out of 158 countries in total, 21 countries are from Western Europe with the average Happiness Score of 6.68962\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "alignmentgroup": "True",
         "hovertemplate": "Country=%{x}<br>Happiness Score=%{y}<extra></extra>",
         "legendgroup": "",
         "marker": {
          "color": "#636efa"
         },
         "name": "",
         "offsetgroup": "",
         "orientation": "v",
         "showlegend": false,
         "textposition": "auto",
         "type": "bar",
         "x": [
          "Switzerland",
          "Iceland",
          "Denmark",
          "Norway",
          "Finland",
          "Netherlands",
          "Sweden",
          "Austria",
          "Luxembourg",
          "Ireland",
          "Belgium",
          "United Kingdom",
          "Germany",
          "France",
          "Spain",
          "Malta",
          "Italy",
          "North Cyprus",
          "Cyprus",
          "Portugal",
          "Greece"
         ],
         "xaxis": "x",
         "y": [
          7.587000000000001,
          7.561,
          7.527,
          7.522,
          7.406000000000001,
          7.377999999999999,
          7.364,
          7.2,
          6.946000000000001,
          6.94,
          6.937,
          6.867000000000001,
          6.75,
          6.575,
          6.329,
          6.3020000000000005,
          5.9479999999999995,
          5.695,
          5.689,
          5.102,
          4.857
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "barmode": "relative",
        "legend": {
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Country"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"bf04c1c3-fd3d-484f-8723-4ff3e50dd1dd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"bf04c1c3-fd3d-484f-8723-4ff3e50dd1dd\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'bf04c1c3-fd3d-484f-8723-4ff3e50dd1dd',\n",
       "                        [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"Country=%{x}<br>Happiness Score=%{y}<extra></extra>\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"textposition\": \"auto\", \"type\": \"bar\", \"x\": [\"Switzerland\", \"Iceland\", \"Denmark\", \"Norway\", \"Finland\", \"Netherlands\", \"Sweden\", \"Austria\", \"Luxembourg\", \"Ireland\", \"Belgium\", \"United Kingdom\", \"Germany\", \"France\", \"Spain\", \"Malta\", \"Italy\", \"North Cyprus\", \"Cyprus\", \"Portugal\", \"Greece\"], \"xaxis\": \"x\", \"y\": [7.587000000000001, 7.561, 7.527, 7.522, 7.406000000000001, 7.377999999999999, 7.364, 7.2, 6.946000000000001, 6.94, 6.937, 6.867000000000001, 6.75, 6.575, 6.329, 6.3020000000000005, 5.9479999999999995, 5.695, 5.689, 5.102, 4.857], \"yaxis\": \"y\"}],\n",
       "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Country\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('bf04c1c3-fd3d-484f-8723-4ff3e50dd1dd');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "#df_a = px.df.query(\" == 'Canada'\")\n",
    "fig = px.bar(d, x='Country', y='Happiness Score')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From above graph we can observe the following:\n",
    "\n",
    "1. Switzerland is the happiest country around the globe with the highest score of 7.587\n",
    "\n",
    "2. Greece ranked lowest in this region but still is a happy country with score of 4.857."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x223b1e5b788>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_2 = [x for x in d['Happiness Score']]\n",
    "\n",
    "y_2 = [y  for y in d['Freedom']]\n",
    "import matplotlib.pyplot as plot\n",
    "plot.scatter(x_2, y_2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "People are really enjoying their freedom in this region."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d_1 = d.drop('Happiness Rank' , axis = 'columns')\n",
    "hm = d_1.corr()\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "sns.heatmap(hm , annot=True, ax=ax, cmap='Reds')\n",
    "plt.show();\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above Heatmap, we can infer that people in Europe have Trust in Government, enjoys their freedom and are happy with their families. Also, it is positively correlated with Economy and Generosity.\n",
    "\n",
    "Western Europe is a Happy Continent."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# India\n",
    "\n",
    "Now we'll look at India which falls in the Southern Asian Region.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "g = df.loc[lambda df: df['Region'] == 'Southern Asia']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "alignmentgroup": "True",
         "hovertemplate": "Country=%{x}<br>Happiness Score=%{y}<extra></extra>",
         "legendgroup": "",
         "marker": {
          "color": "#636efa"
         },
         "name": "",
         "offsetgroup": "",
         "orientation": "v",
         "showlegend": false,
         "textposition": "auto",
         "type": "bar",
         "x": [
          "Bhutan",
          "Pakistan",
          "Bangladesh",
          "India",
          "Nepal",
          "Sri Lanka",
          "Afghanistan"
         ],
         "xaxis": "x",
         "y": [
          5.252999999999999,
          5.194,
          4.694,
          4.565,
          4.513999999999999,
          4.271,
          3.575
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "barmode": "relative",
        "legend": {
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Country"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Happiness Score"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"b93c5183-0755-40ad-9689-d41add3f4d1e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"b93c5183-0755-40ad-9689-d41add3f4d1e\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'b93c5183-0755-40ad-9689-d41add3f4d1e',\n",
       "                        [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"Country=%{x}<br>Happiness Score=%{y}<extra></extra>\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"textposition\": \"auto\", \"type\": \"bar\", \"x\": [\"Bhutan\", \"Pakistan\", \"Bangladesh\", \"India\", \"Nepal\", \"Sri Lanka\", \"Afghanistan\"], \"xaxis\": \"x\", \"y\": [5.252999999999999, 5.194, 4.694, 4.565, 4.513999999999999, 4.271, 3.575], \"yaxis\": \"y\"}],\n",
       "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Country\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Happiness Score\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('b93c5183-0755-40ad-9689-d41add3f4d1e');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "fig = px.bar(g, x='Country', y='Happiness Score')\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>India</td>\n",
       "      <td>Southern Asia</td>\n",
       "      <td>117</td>\n",
       "      <td>4.565</td>\n",
       "      <td>0.02043</td>\n",
       "      <td>0.64499</td>\n",
       "      <td>0.38174</td>\n",
       "      <td>0.51529</td>\n",
       "      <td>0.39786</td>\n",
       "      <td>0.08492</td>\n",
       "      <td>0.26475</td>\n",
       "      <td>2.27513</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Country         Region  Happiness Rank  Happiness Score  Standard Error  \\\n",
       "116   India  Southern Asia             117            4.565         0.02043   \n",
       "\n",
       "     Economy (GDP per Capita)   Family  Health (Life Expectancy)  Freedom  \\\n",
       "116                   0.64499  0.38174                   0.51529  0.39786   \n",
       "\n",
       "     Trust (Government Corruption)  Generosity  Dystopia Residual  \n",
       "116                        0.08492     0.26475            2.27513  "
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "g.query('Country == \"India\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "India ranked 116 in World Happiness Index in the year 2015 and has a score 4.565.\n",
    "\n",
    "From the table above, we can see that Economy and Health has the major impact on Happiness of mankind. \n",
    "\n",
    "Family & Freedom also has some impact but People of India really doesn't trust their government."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conclusion for the year 2015\n",
    "\n",
    "Now we'll look at the major factors impacting the happiness around the globe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <td>158</td>\n",
       "      <td>158</td>\n",
       "      <td>Peru</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>158</td>\n",
       "      <td>10</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Rank</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>79.4937</td>\n",
       "      <td>45.7544</td>\n",
       "      <td>1</td>\n",
       "      <td>40.25</td>\n",
       "      <td>79.5</td>\n",
       "      <td>118.75</td>\n",
       "      <td>158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Happiness Score</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.37573</td>\n",
       "      <td>1.14501</td>\n",
       "      <td>2.839</td>\n",
       "      <td>4.526</td>\n",
       "      <td>5.2325</td>\n",
       "      <td>6.24375</td>\n",
       "      <td>7.587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Standard Error</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0478847</td>\n",
       "      <td>0.0171462</td>\n",
       "      <td>0.01848</td>\n",
       "      <td>0.0372675</td>\n",
       "      <td>0.04394</td>\n",
       "      <td>0.0523</td>\n",
       "      <td>0.13693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.846137</td>\n",
       "      <td>0.403121</td>\n",
       "      <td>0</td>\n",
       "      <td>0.545808</td>\n",
       "      <td>0.910245</td>\n",
       "      <td>1.15845</td>\n",
       "      <td>1.69042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.991046</td>\n",
       "      <td>0.272369</td>\n",
       "      <td>0</td>\n",
       "      <td>0.856823</td>\n",
       "      <td>1.02951</td>\n",
       "      <td>1.2144</td>\n",
       "      <td>1.40223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.630259</td>\n",
       "      <td>0.247078</td>\n",
       "      <td>0</td>\n",
       "      <td>0.439185</td>\n",
       "      <td>0.696705</td>\n",
       "      <td>0.811013</td>\n",
       "      <td>1.02525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Freedom</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.428615</td>\n",
       "      <td>0.150693</td>\n",
       "      <td>0</td>\n",
       "      <td>0.32833</td>\n",
       "      <td>0.435515</td>\n",
       "      <td>0.549092</td>\n",
       "      <td>0.66973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.143422</td>\n",
       "      <td>0.120034</td>\n",
       "      <td>0</td>\n",
       "      <td>0.061675</td>\n",
       "      <td>0.10722</td>\n",
       "      <td>0.180255</td>\n",
       "      <td>0.55191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Generosity</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.237296</td>\n",
       "      <td>0.126685</td>\n",
       "      <td>0</td>\n",
       "      <td>0.150553</td>\n",
       "      <td>0.21613</td>\n",
       "      <td>0.309883</td>\n",
       "      <td>0.79588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dystopia Residual</th>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.09898</td>\n",
       "      <td>0.55355</td>\n",
       "      <td>0.32858</td>\n",
       "      <td>1.75941</td>\n",
       "      <td>2.09542</td>\n",
       "      <td>2.46241</td>\n",
       "      <td>3.60214</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              count unique                 top freq  \\\n",
       "Country                         158    158                Peru    1   \n",
       "Region                          158     10  Sub-Saharan Africa   40   \n",
       "Happiness Rank                  158    NaN                 NaN  NaN   \n",
       "Happiness Score                 158    NaN                 NaN  NaN   \n",
       "Standard Error                  158    NaN                 NaN  NaN   \n",
       "Economy (GDP per Capita)        158    NaN                 NaN  NaN   \n",
       "Family                          158    NaN                 NaN  NaN   \n",
       "Health (Life Expectancy)        158    NaN                 NaN  NaN   \n",
       "Freedom                         158    NaN                 NaN  NaN   \n",
       "Trust (Government Corruption)   158    NaN                 NaN  NaN   \n",
       "Generosity                      158    NaN                 NaN  NaN   \n",
       "Dystopia Residual               158    NaN                 NaN  NaN   \n",
       "\n",
       "                                    mean        std      min        25%  \\\n",
       "Country                              NaN        NaN      NaN        NaN   \n",
       "Region                               NaN        NaN      NaN        NaN   \n",
       "Happiness Rank                   79.4937    45.7544        1      40.25   \n",
       "Happiness Score                  5.37573    1.14501    2.839      4.526   \n",
       "Standard Error                 0.0478847  0.0171462  0.01848  0.0372675   \n",
       "Economy (GDP per Capita)        0.846137   0.403121        0   0.545808   \n",
       "Family                          0.991046   0.272369        0   0.856823   \n",
       "Health (Life Expectancy)        0.630259   0.247078        0   0.439185   \n",
       "Freedom                         0.428615   0.150693        0    0.32833   \n",
       "Trust (Government Corruption)   0.143422   0.120034        0   0.061675   \n",
       "Generosity                      0.237296   0.126685        0   0.150553   \n",
       "Dystopia Residual                2.09898    0.55355  0.32858    1.75941   \n",
       "\n",
       "                                    50%       75%      max  \n",
       "Country                             NaN       NaN      NaN  \n",
       "Region                              NaN       NaN      NaN  \n",
       "Happiness Rank                     79.5    118.75      158  \n",
       "Happiness Score                  5.2325   6.24375    7.587  \n",
       "Standard Error                  0.04394    0.0523  0.13693  \n",
       "Economy (GDP per Capita)       0.910245   1.15845  1.69042  \n",
       "Family                          1.02951    1.2144  1.40223  \n",
       "Health (Life Expectancy)       0.696705  0.811013  1.02525  \n",
       "Freedom                        0.435515  0.549092  0.66973  \n",
       "Trust (Government Corruption)   0.10722  0.180255  0.55191  \n",
       "Generosity                      0.21613  0.309883  0.79588  \n",
       "Dystopia Residual               2.09542   2.46241  3.60214  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include = 'all').T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above table we observe the following:\n",
    "\n",
    "1. The World Happiness Report 2015, has ranked 158 countries by their happiness levels.\n",
    "\n",
    "2. The highest happiness score is 7.587 while the lowest is 2.839.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x223b1834c48>"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_2 = [x for x in df['Happiness Score']]\n",
    "\n",
    "y_2 = [y  for y in df['Family']]\n",
    "import matplotlib.pyplot as plot\n",
    "plot.scatter(x_2, y_2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Family has a major impact on happiness."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "color = dict(boxes='DarkGreen', whiskers='DarkOrange',medians='DarkBlue', caps='Gray')\n",
    "df['Economy (GDP per Capita)'].plot.box(color = color , sym = 'r+')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Economy also plays a major role in happiness."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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1q9//Wvr4MGDVnFxsTV27FjrzjvvtFpbWy3Lsqy7777bmjlzpvXmm29a77zzjpWdnW1FRERY7777ruvYERERVk1NjVVTU2M98sgjVkREhPX+++9bNTU1VkVFhRUREWFVVla6am5oaLCio6OtF198sWu/dHxvsb2DPq2+vl719fUKDQ1t13fmzBm3n202m959910dPHhQzzzzjKZPny5JSkpK0smTJ/XUU09p6tSprvEDBw7Uhg0bXK8eHA6HCgsL1dDQoICAAK1Zs0ZXX321ioqK5ONz9kXxyJEjdeutt+qNN97QLbfcIunsHTXLli3TxIkTJUlffPGFNm7cqDvuuEO5ubmSpAkTJujyyy/X8uXLtX//fiUnJ6uyslIZGRmummJjYzVw4EBdcskl7a512LBhGjZsmCRp7NixkqShQ4fq8ssv144dOzRu3DhJkt1uV2trq2bMmNGJ3zZMwPYO+rTW1tYO2z/44AONGjXK7euuu+7SO++8I19fXyUlJenMmTOur8mTJ6u6ulonTpxwHWPMmDFu20VtoXrq1Cl9+eWXOnz4sJKTk9Xa2uo6zjXXXKPhw4fr7bffdqsnIiLC9f3hw4fV3NzcLnhTUlJ0ySWX6C9/+YskKS4uzrVNs23bNv3vf/9TVlaW1+9L+Pr6atasWdq9e7eam5slSa+99pomTZqkgQMHenUMmIeVPvq0QYMGacCAAfrkk0/c2sPDw7V9+3bXz48//riks6vslpYW12r42/773/+6Pjf0288ab1vNW5alkydPqrW1VUVFRSoqKurwON80ZMgQ1/f19fWSzq7Ev338wYMHq7GxUZKUn5+voqIi2e127d69Wz4+PoqPj9fjjz+uK6+88hy/EXfp6el67rnnVF5erlGjRunQoUN67rnnvJoLMxH66PMmT56siooKnTp1SgMGDJAkXXrppYqKinKN8fPzU0tLiwICAhQQEKDnn3++w2OFhYV5dU4/Pz/ZbDbdfffdSk1N7bD/XAIDAyWd/eSiESNGuNpbW1tVV1enQYMGSZICAgL04IMP6sEHH1RVVZX27dunDRs26IknnujwD01HQkNDFRMTI7vdLofDoSFDhmjChAlezYWZ2N5Bn7d48WI1NzfrkUce0enTp9v1nzx5Up999pkkady4cWpoaFC/fv0UFRXl+vrHP/6hZ599Vjabzatz+vv7a+TIkaqurnY7TlhYmJ5++mkdPnz4nHPHjBmjH/zgB9q1a5dbe1lZmU6fPq2YmBh9+umnmjhxosrKyiRJV111lRYvXqz4+HjV1NR0eNxzfXrc7NmzdeDAAZWVlemWW27hU+ZwXqz00edde+21WrVqlXJzczV79mzdfvvtuuaaa/T111+rsrJS27dv15dffqkFCxYoOTlZ119/vZYuXaply5YpNDRUhw4d0vr163XTTTedd4X+bT//+c+1dOlSZWdnKy0tTc3Nzdq4caP+/e9/Kysr65zzBg4cqEWLFqmoqEj9+vXTxIkT9fHHH6uwsFCxsbFKTEyUj4+PrrzySq1cuVKNjY0aMWKEjhw5ov3792vZsmUdHjcgIECStHPnTo0dO9a1TZWSkqKVK1fqww8/1KpVqy7gNwsTEfq4KKSmpmr06NF66aWXtHnzZtejCcLCwjRv3jzNnz/f9Ubsxo0bVVBQoHXr1unzzz/XFVdcoaVLl+qee+65oHNOnDhRmzZt0rp163Tvvffqhz/8oaKiolRSUuL2xm1H7r//fg0ZMkQvvviiNm/erCFDhmju3Lm69957Xe8dFBYWavXq1SooKHDVee+992rx4sUdHjMlJUWvv/66srOzNWfOHP3yl7+UdHarKTY2VnV1dQoPD7+ga4R5+Ixc4CLX1NSkpKQkZWVlac6cOb1dDvo4VvrARerEiRMqLS3VwYMHdemll+rmm2/u7ZJwESD0gYuUj4+P/vCHP8jPz09r1qzRpZde2tsl4SLA9g4AGIRbNgHAIIQ+ABiE0AcAgxD6AGAQQh8ADELoA4BB/h8D3vQpb26g7QAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "color = dict(boxes='DarkGreen', whiskers='DarkOrange',medians='DarkBlue', caps='Gray')\n",
    "df['Generosity'].plot.box(color = color , sym = 'r+')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Generosity really doesn't contribute much to the happiness index."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "a = df.drop('Happiness Rank' , axis = 'columns')\n",
    "hm = a.corr()\n",
    "fig, ax = plt.subplots(figsize=(12,8))\n",
    "sns.heatmap(hm , annot=True, ax=ax, cmap='Oranges')\n",
    "\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Acoording to the above plot, **Economy(0.78), Family(0.74) and Health(0.72)** plays the most significant role in contributing to happiness while Government Corruption has the lowest impact around the globe."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# World Happiness Index for the year 2015, 2016, 2017\n",
    "\n",
    "Comparison between the 3 years"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [],
   "source": [
    "Happy1 = df1[['Country', 'Happiness Rank','Happiness Score']].sort_values(by = 'Happiness Rank', ascending = True).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>1</td>\n",
       "      <td>7.526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>2</td>\n",
       "      <td>7.509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>3</td>\n",
       "      <td>7.501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>4</td>\n",
       "      <td>7.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Finland</td>\n",
       "      <td>5</td>\n",
       "      <td>7.413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Canada</td>\n",
       "      <td>6</td>\n",
       "      <td>7.404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>7</td>\n",
       "      <td>7.339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>8</td>\n",
       "      <td>7.334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Australia</td>\n",
       "      <td>9</td>\n",
       "      <td>7.313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>10</td>\n",
       "      <td>7.291</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  Happiness Rank  Happiness Score\n",
       "0      Denmark               1            7.526\n",
       "1  Switzerland               2            7.509\n",
       "2      Iceland               3            7.501\n",
       "3       Norway               4            7.498\n",
       "4      Finland               5            7.413\n",
       "5       Canada               6            7.404\n",
       "6  Netherlands               7            7.339\n",
       "7  New Zealand               8            7.334\n",
       "8    Australia               9            7.313\n",
       "9       Sweden              10            7.291"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Happy1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 10 countries for the year 2016."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "Happy2 = df2[['Country', 'Happiness.Rank','Happiness.Score']].sort_values(by = 'Happiness.Rank', ascending = True).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness.Rank</th>\n",
       "      <th>Happiness.Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Norway</td>\n",
       "      <td>1</td>\n",
       "      <td>7.537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>2</td>\n",
       "      <td>7.522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>3</td>\n",
       "      <td>7.504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>4</td>\n",
       "      <td>7.494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Finland</td>\n",
       "      <td>5</td>\n",
       "      <td>7.469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>6</td>\n",
       "      <td>7.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Canada</td>\n",
       "      <td>7</td>\n",
       "      <td>7.316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>8</td>\n",
       "      <td>7.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>9</td>\n",
       "      <td>7.284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Australia</td>\n",
       "      <td>10</td>\n",
       "      <td>7.284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  Happiness.Rank  Happiness.Score\n",
       "0       Norway               1            7.537\n",
       "1      Denmark               2            7.522\n",
       "2      Iceland               3            7.504\n",
       "3  Switzerland               4            7.494\n",
       "4      Finland               5            7.469\n",
       "5  Netherlands               6            7.377\n",
       "6       Canada               7            7.316\n",
       "7  New Zealand               8            7.314\n",
       "8       Sweden               9            7.284\n",
       "9    Australia              10            7.284"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Happy2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 10 countries for the year 2017."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "m = pd.concat([Happy, Happy1], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [],
   "source": [
    "n = pd.concat([m,Happy2], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Country</th>\n",
       "      <th>Happiness.Rank</th>\n",
       "      <th>Happiness.Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>1</td>\n",
       "      <td>7.526</td>\n",
       "      <td>Norway</td>\n",
       "      <td>1</td>\n",
       "      <td>7.537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>2</td>\n",
       "      <td>7.509</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>2</td>\n",
       "      <td>7.522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>3</td>\n",
       "      <td>7.501</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>3</td>\n",
       "      <td>7.504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>Norway</td>\n",
       "      <td>4</td>\n",
       "      <td>7.498</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>4</td>\n",
       "      <td>7.494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>Finland</td>\n",
       "      <td>5</td>\n",
       "      <td>7.413</td>\n",
       "      <td>Finland</td>\n",
       "      <td>5</td>\n",
       "      <td>7.469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Finland</td>\n",
       "      <td>6</td>\n",
       "      <td>7.406</td>\n",
       "      <td>Canada</td>\n",
       "      <td>6</td>\n",
       "      <td>7.404</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>6</td>\n",
       "      <td>7.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>7</td>\n",
       "      <td>7.378</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>7</td>\n",
       "      <td>7.339</td>\n",
       "      <td>Canada</td>\n",
       "      <td>7</td>\n",
       "      <td>7.316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>8</td>\n",
       "      <td>7.364</td>\n",
       "      <td>New Zealand</td>\n",
       "      <td>8</td>\n",
       "      <td>7.334</td>\n",
       "      <td>New Zealand</td>\n",
       "      <td>8</td>\n",
       "      <td>7.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>9</td>\n",
       "      <td>7.286</td>\n",
       "      <td>Australia</td>\n",
       "      <td>9</td>\n",
       "      <td>7.313</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>9</td>\n",
       "      <td>7.284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Australia</td>\n",
       "      <td>10</td>\n",
       "      <td>7.284</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>10</td>\n",
       "      <td>7.291</td>\n",
       "      <td>Australia</td>\n",
       "      <td>10</td>\n",
       "      <td>7.284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  Happiness Rank  Happiness Score      Country  Happiness Rank  \\\n",
       "0  Switzerland               1            7.587      Denmark               1   \n",
       "1      Iceland               2            7.561  Switzerland               2   \n",
       "2      Denmark               3            7.527      Iceland               3   \n",
       "3       Norway               4            7.522       Norway               4   \n",
       "4       Canada               5            7.427      Finland               5   \n",
       "5      Finland               6            7.406       Canada               6   \n",
       "6  Netherlands               7            7.378  Netherlands               7   \n",
       "7       Sweden               8            7.364  New Zealand               8   \n",
       "8  New Zealand               9            7.286    Australia               9   \n",
       "9    Australia              10            7.284       Sweden              10   \n",
       "\n",
       "   Happiness Score      Country  Happiness.Rank  Happiness.Score  \n",
       "0            7.526       Norway               1            7.537  \n",
       "1            7.509      Denmark               2            7.522  \n",
       "2            7.501      Iceland               3            7.504  \n",
       "3            7.498  Switzerland               4            7.494  \n",
       "4            7.413      Finland               5            7.469  \n",
       "5            7.404  Netherlands               6            7.377  \n",
       "6            7.339       Canada               7            7.316  \n",
       "7            7.334  New Zealand               8            7.314  \n",
       "8            7.313       Sweden               9            7.284  \n",
       "9            7.291    Australia              10            7.284  "
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above table we can see that\n",
    "\n",
    "1. Top 10 countries remain the same for all the 3 years, only the ranking differs.\n",
    "\n",
    "1. Switzerland dropped it's ranking by 4 in the year 2017."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
